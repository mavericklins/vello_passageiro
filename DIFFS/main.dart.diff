--- /app/lib/main.dart	2025-08-30 20:58:54.355548875 +0000
+++ lib/main.dart	2025-08-30 21:02:28.959526755 +0000
@@ -25,7 +25,7 @@
   LoggerService.initialize();
   LoggerService.lifecycle('App iniciando', context: 'MAIN');
   
-  runApp(VelloPassageiroPremiumApp());
+  runApp(const VelloPassageiroPremiumApp());
 }
 
 class VelloPassageiroPremiumApp extends StatelessWidget {
@@ -40,32 +40,36 @@
       child: MaterialApp(
         title: 'Vello Passageiro Premium',
         debugShowCheckedModeBanner: false,
+        // CORREÇÃO: Usar ThemeData adequadamente com colorScheme
         theme: ThemeData(
-          primarySwatch: Colors.orange),
-          primaryColor: VelloColors.azul,
-          accentColor: VelloColors.laranja,
-          backgroundColor: VelloColors.cinzaClaro,
-          scaffoldBackgroundColor: VelloColors.cinzaClaro,
+          colorScheme: ColorScheme.fromSeed(
+            seedColor: VelloTokens.brand,
+            primary: VelloTokens.azul,
+            secondary: VelloTokens.laranja,
+            surface: VelloTokens.cinzaClaro,
+          ),
+          // CORREÇÃO: Remover propriedades depreciadas
+          scaffoldBackgroundColor: VelloTokens.cinzaClaro,
           fontFamily: 'Poppins',
           textTheme: TextTheme(
             displayLarge: TextStyle(
-              color: VelloColors.azul,
+              color: VelloTokens.azul,
               fontWeight: FontWeight.bold,
             ),
             titleLarge: TextStyle(
-              color: VelloColors.azul,
+              color: VelloTokens.azul,
               fontWeight: FontWeight.w600,
             ),
             bodyLarge: TextStyle(
-              color: VelloColors.cinza700,
+              color: VelloTokens.cinza700,
             ),
             bodyMedium: TextStyle(
-              color: VelloColors.cinza600,
+              color: VelloTokens.cinza600,
             ),
           ),
           elevatedButtonTheme: ElevatedButtonThemeData(
             style: ElevatedButton.styleFrom(
-              backgroundColor: VelloColors.laranja,
+              backgroundColor: VelloTokens.laranja,
               foregroundColor: VelloTokens.white,
               shape: RoundedRectangleBorder(
                 borderRadius: BorderRadius.circular(12),
@@ -75,21 +79,22 @@
           ),
           appBarTheme: AppBarTheme(
             backgroundColor: VelloTokens.white,
-            foregroundColor: VelloColors.azul,
+            foregroundColor: VelloTokens.azul,
             elevation: 2,
             centerTitle: true,
-            titleTextStyle: const TextStyle(
-              color: VelloColors.azul,
+            titleTextStyle: TextStyle(
+              color: VelloTokens.azul,
               fontSize: 18,
               fontWeight: FontWeight.w600,
               fontFamily: 'Poppins',
             ),
           ),
         ),
+        // CORREÇÃO: Mover home para dentro do MaterialApp
         home: SplashLoadingScreen(),
         routes: {
           '/login': (context) => LoginScreen(),
-          '/home': (context) => PremiumFeaturesDemo(),
+          '/home': (context) => const PremiumFeaturesDemo(),
           '/sos': (context) => SOSScreen(),
           '/chatbot': (context) => ChatbotSupportScreen(),
           '/emergency-contacts': (context) => EmergencyContactsScreen(),
@@ -136,13 +141,13 @@
               width: 32,
               height: 32,
               decoration: BoxDecoration(
-                color: VelloColors.laranja,
+                color: VelloTokens.laranja,
                 borderRadius: BorderRadius.circular(8),
               ),
-              child: Icon(Icons.stars, color: VelloTokens.white, size: 18),
+              child: const Icon(Icons.stars, color: VelloTokens.white, size: 18),
             ),
-            SizedBox(width: 12),
-            Text('Recursos Premium'),
+            const SizedBox(width: 12),
+            const Text('Recursos Premium'),
           ],
         ),
         actions: [
@@ -151,7 +156,7 @@
               return IconButton(
                 icon: Icon(
                   voiceService.speechListening ? Icons.mic : Icons.mic_none,
-                  color: voiceService.speechListening ? VelloColors.laranja : VelloColors.azul,
+                  color: voiceService.speechListening ? VelloTokens.laranja : VelloTokens.azul,
                 ),
                 onPressed: () {
                   if (voiceService.speechListening) {
@@ -166,17 +171,17 @@
         ],
       ),
       body: SingleChildScrollView(
-        padding: EdgeInsets.all(16),
+        padding: const EdgeInsets.all(16),
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: [
             // Mostrar status do Firebase
             _buildFirebaseStatusCard(),
-            SizedBox(height: 16),
+            const SizedBox(height: 16),
             _buildWelcomeCard(),
-            SizedBox(height: 24),
+            const SizedBox(height: 24),
             _buildFeaturesGrid(),
-            SizedBox(height: 24),
+            const SizedBox(height: 24),
             _buildFeatureFlagsStatus(),
           ],
         ),
@@ -189,7 +194,7 @@
     
     return Container(
       width: double.infinity,
-      padding: EdgeInsets.all(16),
+      padding: const EdgeInsets.all(16),
       decoration: BoxDecoration(
         color: Colors.green[50],
         borderRadius: BorderRadius.circular(12),
@@ -199,12 +204,12 @@
       ),
       child: Row(
         children: [
-          Icon(
+          const Icon(
             Icons.check_circle,
             color: Colors.green,
             size: 24,
           ),
-          SizedBox(width: 12),
+          const SizedBox(width: 12),
           Expanded(
             child: Column(
               crossAxisAlignment: CrossAxisAlignment.start,
@@ -217,7 +222,7 @@
                     fontSize: 14,
                   ),
                 ),
-                SizedBox(height: 4),
+                const SizedBox(height: 4),
                 Text(
                   'Projeto: vello-passageiro-premium',
                   style: TextStyle(
@@ -236,24 +241,24 @@
   Widget _buildWelcomeCard() {
     return Container(
       width: double.infinity,
-      padding: EdgeInsets.all(24),
+      padding: const EdgeInsets.all(24),
       decoration: BoxDecoration(
-        gradient: VelloColors.gradientePrimario,
+        gradient: VelloTokens.gradientePrimario,
         borderRadius: BorderRadius.circular(16),
-        boxShadow: [VelloColors.sombraPadrao],
+        boxShadow: [VelloTokens.sombraPadrao],
       ),
       child: Column(
         crossAxisAlignment: CrossAxisAlignment.start,
         children: [
           Row(
             children: [
-              Icon(Icons.security, color: VelloTokens.white, size: 32),
-              SizedBox(width: 16),
+              const Icon(Icons.security, color: VelloTokens.white, size: 32),
+              const SizedBox(width: 16),
               Expanded(
                 child: Column(
                   crossAxisAlignment: CrossAxisAlignment.start,
                   children: [
-                    Text(
+                    const Text(
                       'Vello Passageiro Premium',
                       style: TextStyle(
                         color: VelloTokens.white,
@@ -273,7 +278,7 @@
               ),
             ],
           ),
-          SizedBox(height: 16),
+          const SizedBox(height: 16),
           Text(
             'Todos os recursos premium do Motorista agora disponíveis para Passageiros com a mesma identidade visual e funcionalidades avançadas.',
             style: TextStyle(
@@ -309,7 +314,7 @@
         'title': 'Compartilhar Viagem',
         'description': 'Notificar contatos sobre sua viagem',
         'icon': Icons.share_location,
-        'color': VelloColors.laranja,
+        'color': VelloTokens.laranja,
         'enabled': FeatureFlags.enableTripSharing,
         'action': () => _testTripSharing(),
       },
@@ -342,19 +347,19 @@
     return Column(
       crossAxisAlignment: CrossAxisAlignment.start,
       children: [
-        Text(
+        const Text(
           'Recursos Disponíveis',
           style: TextStyle(
             fontSize: 20,
             fontWeight: FontWeight.bold,
-            color: VelloColors.azul,
+            color: VelloTokens.azul,
           ),
         ),
-        SizedBox(height: 16),
+        const SizedBox(height: 16),
         GridView.builder(
           shrinkWrap: true,
-          physics: NeverScrollableScrollPhysics(),
-          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+          physics: const NeverScrollableScrollPhysics(),
+          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
             crossAxisCount: 2,
             crossAxisSpacing: 12,
             mainAxisSpacing: 12,
@@ -383,11 +388,11 @@
       } : null,
       borderRadius: BorderRadius.circular(16),
       child: Container(
-        padding: EdgeInsets.all(16),
+        padding: const EdgeInsets.all(16),
         decoration: BoxDecoration(
           color: VelloTokens.white,
           borderRadius: BorderRadius.circular(16),
-          boxShadow: [VelloColors.sombraPadrao],
+          boxShadow: [VelloTokens.sombraPadrao],
           border: isEnabled ? null : Border.all(
             color: Colors.grey[300]!,
             style: BorderStyle.solid,
@@ -397,7 +402,7 @@
           mainAxisAlignment: MainAxisAlignment.center,
           children: [
             Container(
-              padding: EdgeInsets.all(12),
+              padding: const EdgeInsets.all(12),
               decoration: BoxDecoration(
                 color: isEnabled 
                     ? (feature['color'] as Color).withOpacity(0.1)
@@ -410,17 +415,17 @@
                 size: 28,
               ),
             ),
-            SizedBox(height: 12),
+            const SizedBox(height: 12),
             Text(
               feature['title'] as String,
               style: TextStyle(
                 fontSize: 14,
                 fontWeight: FontWeight.bold,
-                color: isEnabled ? VelloColors.azul : Colors.grey,
+                color: isEnabled ? VelloTokens.azul : Colors.grey,
               ),
               textAlign: TextAlign.center,
             ),
-            SizedBox(height: 4),
+            const SizedBox(height: 4),
             Text(
               feature['description'] as String,
               style: TextStyle(
@@ -432,9 +437,9 @@
               overflow: TextOverflow.ellipsis,
             ),
             if (!isEnabled) ...[
-              SizedBox(height: 8),
+              const SizedBox(height: 8),
               Container(
-                padding: EdgeInsets.symmetric(horizontal: 8, vertical: 2),
+                padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 2),
                 decoration: BoxDecoration(
                   color: Colors.grey[200],
                   borderRadius: BorderRadius.circular(8),
@@ -458,30 +463,30 @@
   Widget _buildFeatureFlagsStatus() {
     return Container(
       width: double.infinity,
-      padding: EdgeInsets.all(20),
+      padding: const EdgeInsets.all(20),
       decoration: BoxDecoration(
         color: VelloTokens.white,
         borderRadius: BorderRadius.circular(16),
-        boxShadow: [VelloColors.sombraPadrao],
+        boxShadow: [VelloTokens.sombraPadrao],
       ),
       child: Column(
         crossAxisAlignment: CrossAxisAlignment.start,
         children: [
-          Row(
+          const Row(
             children: [
-              Icon(Icons.settings, color: VelloColors.azul),
+              Icon(Icons.settings, color: VelloTokens.azul),
               SizedBox(width: 12),
               Text(
                 'Status dos Feature Flags',
                 style: TextStyle(
                   fontSize: 18,
                   fontWeight: FontWeight.bold,
-                  color: VelloColors.azul,
+                  color: VelloTokens.azul,
                 ),
               ),
             ],
           ),
-          SizedBox(height: 16),
+          const SizedBox(height: 16),
           _buildFeatureFlagRow('Sistema SOS Avançado', FeatureFlags.enableAdvancedSOS),
           _buildFeatureFlagRow('Assistente de Voz', FeatureFlags.enableVoiceAssistant),
           _buildFeatureFlagRow('Compartilhamento de Viagem', FeatureFlags.enableTripSharing),
@@ -496,7 +501,7 @@
 
   Widget _buildFeatureFlagRow(String feature, bool enabled) {
     return Padding(
-      padding: EdgeInsets.symmetric(vertical: 4),
+      padding: const EdgeInsets.symmetric(vertical: 4),
       child: Row(
         children: [
           Container(
@@ -507,13 +512,13 @@
               borderRadius: BorderRadius.circular(4),
             ),
           ),
-          SizedBox(width: 12),
+          const SizedBox(width: 12),
           Expanded(
             child: Text(
               feature,
-              style: TextStyle(
+              style: const TextStyle(
                 fontSize: 13,
-                color: VelloColors.cinza700,
+                color: VelloTokens.cinza700,
               ),
             ),
           ),
@@ -533,37 +538,37 @@
   void _testVoiceAssistant() {
     showModalBottomSheet(
       context: context,
-      shape: RoundedRectangleBorder(
+      shape: const RoundedRectangleBorder(
         borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
       ),
       builder: (context) => Container(
-        padding: EdgeInsets.all(20),
+        padding: const EdgeInsets.all(20),
         child: Column(
           mainAxisSize: MainAxisSize.min,
           children: [
-            Text(
+            const Text(
               'Teste do Assistente de Voz',
               style: TextStyle(
                 fontSize: 18,
                 fontWeight: FontWeight.bold,
-                color: VelloColors.azul,
+                color: VelloTokens.azul,
               ),
             ),
-            SizedBox(height: 20),
+            const SizedBox(height: 20),
             ElevatedButton(
               onPressed: () {
                 _voiceService.falar('Olá! Assistente de voz do Vello funcionando perfeitamente.');
                 Navigator.pop(context);
               },
-              child: Text('Testar Fala'),
+              child: const Text('Testar Fala'),
             ),
-            SizedBox(height: 12),
+            const SizedBox(height: 12),
             ElevatedButton(
               onPressed: () {
                 _voiceService.iniciarEscuta();
                 Navigator.pop(context);
               },
-              child: Text('Testar Escuta'),
+              child: const Text('Testar Escuta'),
             ),
           ],
         ),
@@ -573,16 +578,16 @@
 
   void _testTripSharing() {
     ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(
+      const SnackBar(
         content: Text('Funcionalidade de compartilhamento disponível durante corridas'),
-        backgroundColor: VelloColors.laranja,
+        backgroundColor: VelloTokens.laranja,
       ),
     );
   }
 
   void _testScheduling() {
     ScaffoldMessenger.of(context).showSnackBar(
-      SnackBar(
+      const SnackBar(
         content: Text('Agendamento premium disponível ao solicitar corridas'),
         backgroundColor: Colors.indigo,
       ),
